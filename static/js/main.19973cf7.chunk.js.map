{"version":3,"sources":["components/ СontactForm.js","components/ContactList.js","components/Filter.js","App.js","index.js","styles/ContactForm..module.css","styles/ContactList.module.css"],"names":["ContactForm","AddContact","useState","name","setName","number","setNumber","handleChange","e","target","value","className","style","form","onSubmit","preventDefault","label","input","type","onChange","button","ContactList","contacts","onDeleteContact","list","map","id","list_name","onClick","Filter","useLocalStorage","key","defaultValue","serialize","JSON","stringify","deserialize","parse","window","localStorage","getItem","state","setState","useEffect","setItem","App","setContacts","filter","setFilter","find","contact","alert","uuidv4","length","toLowerCase","includes","contactId","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.19973cf7.chunk.js","sourcesContent":["import {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport style from '../styles/ContactForm..module.css'\n\nexport default function ContactForm ({AddContact}) {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    \nconst handleChange =(e) => {\n    const {name,value} = e.target;\n    switch (name) {\n        case 'name': setName(value);\n            break;\n        \n        case 'number': setNumber(value);\n            break;\n        \n        default: return;\n   }\n};\n\nconst handleSubmit = (e) => {\n    e.preventDefault();\n    \n    AddContact(name,number);\n    setName('');\n    setNumber('');\n};\n\n\n    return (\n        <form className={style.form} onSubmit={handleSubmit}>\n            <label className={style.label}>\n                Name\n                <input\n                    className={style.input}\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={handleChange}\n                />\n            </label>\n            <label className={style.label}>\n                Number\n                <input\n                    className={style.input}\n                     type=\"tel\"\n                     name=\"number\"\n                     value={number}\n                     onChange={handleChange}\n                />\n            </label>\n            <button className={style.button} type=\"submit\">\n                Добавить контакт\n            </button>\n        </form>\n    );\n\n\n};\n\n    ContactForm.propTypes = {\n        AddContact: PropTypes.func.isRequired,\n      };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from '../styles/ContactList.module.css'\n\nconst ContactList = ({contacts,onDeleteContact}) => (\n    <ul className = {style.list}>\n        {contacts.map(({name,number,id}) => (\n        <li\n        className = {style.list_name}\n         key = {id}>\n            {name + ':' + number}\n            \n            {<button\n                className = {style.button}\n                type = 'button'\n                name = 'delete'\n                onClick = {() => onDeleteContact(id) }>\n                    Удалить\n            </button>\n            }\n           \n        </li>\n          \n         ))}\n     \n    </ul>\n)\n\nContactList.propTypes = {\n    onDeleteContact: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n            id: PropTypes.string.isRequired,\n        })\n    )\n}\n\nexport default ContactList;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Filter ({value,onChange}){\n    return(\n        <div>\n           Поиск контактов по имени\n           <input\n           type = 'text'\n           value ={value}\n           onChange = {(e) => onChange(e.target.value)}/>\n        </div>\n    )\n}\n\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n}\n\nexport default Filter","import {useEffect, useState}from 'react';\nimport ContactForm from './components/ СontactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport {v4 as uuidv4} from 'uuid';\n\nconst useLocalStorage = (key, defaultValue, serialize = JSON.stringify, deserialize = JSON.parse) => {\n  const [state, setState] = useState(() => {\n    return deserialize(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, serialize(state));\n  }, [key, state, serialize]);\n\n  return [state, setState]\n\n};\n\nexport default function App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useLocalStorage('filter', '');\n  \n const addContact = (name, number) => {\n    if (contacts\n.find((contact) => contact.name\n=== name)) {\n     alert(`${name} уже есть в контактах`);\n   }\n \n      const contact = {\n        name,\n        number,\n        id: uuidv4(),\n            };\n\n   setContacts(contacts => [...contacts, contact]);\n    \n    }\n\n\n\nconst changeFilter = (filter) => {\nsetFilter(filter);\n\n};\n\nconst getVisibleContacts = () => {\nreturn contacts.filter((contacts)=> contacts.name.toLowerCase().includes(filter.toLowerCase())) \n};\n\nconst deleteContact = (contactId) =>{\n  setContacts(contacts.filter(contact => contact.id !== contactId))\n\n};\n\n\nreturn (\n  <div>\n    <h1>Phonebook</h1>\n    <ContactForm AddContact={addContact} />\n\n    <h2>Contacts</h2>\n    {contacts.length > 1 && (\n      <Filter value={filter} onChange={changeFilter} />\n    )}\n    {contacts.length > 0 && (\n      <ContactList\n        contacts={getVisibleContacts()}\n        onDeleteContact={deleteContact} />\n    )}\n  </div>\n);\n};\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm__form__3fu15\",\"label\":\"ContactForm__label__czKiJ\",\"input\":\"ContactForm__input__2ksW3\",\"button\":\"ContactForm__button__Dl2ri\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3I7bH\",\"list_name\":\"ContactList_list_name__152z0\",\"button\":\"ContactList_button__36Xig\"};"],"sourceRoot":""}